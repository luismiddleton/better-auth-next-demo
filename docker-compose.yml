name: 'better-auth-next-stack'
services:
  redis-rate-limiting:
    image: redis:latest
    container_name: redis_session_management
    ports:
      - "6379:6379"  # Expose port for external access if necessary
    volumes:
      - redis_session_management_data:/data  # Named volume for persistent data

  redis-session-management:
    image: redis:latest
    container_name: redis_rate_limiting
    ports:
      - "6380:6379"  # Map to a different host port to avoid conflicts
    volumes:
      - redis_rate_limiting_data:/data  # Named volume for persistent data
      
# Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"
    networks:
      - app_network
  # Zipkin
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"
    networks:
      - app_network
  # Collector
  otel-collector:
    image: otel/opentelemetry-collector:0.67.0
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one
    networks:
      - app_network
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - app_network
volumes:
  grafana-storage:
  redis_rate_limiting_data:
    driver: local
  redis_session_management_data:
    driver: local
networks:
  app_network: